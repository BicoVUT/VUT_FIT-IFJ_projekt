Testy pre parser
==================================
==================================

Testy funkcii v parser.c 
==================================

[TEST1]
Testovanie parseru na subore: "tests/test_files_parser/parser_nondet1.test"
~~~~~~~~~~~~~~~~~~~~
zaciatok suboru
-------------------------------------------------------
package main

func jozko() (int) {
    return 5
}

func main (){
    id := 1+3
    id1 := 0
    id1 = jozko()
}

-------------------------------------------------------
koniec suboru
EXIT CODE JE : --------------------------------------------------------------------0

[TEST2]
Testovanie parseru na subore: "tests/test_files_parser/parser_nondet2.test"
~~~~~~~~~~~~~~~~~~~~
zaciatok suboru
-------------------------------------------------------
package main

func jozko(id int)(int){
    return id+id
}


func main (){
    id := 1+3
    id1 := 0
    id1 = jozko(id)
}

-------------------------------------------------------
koniec suboru
EXIT CODE JE : --------------------------------------------------------------------0

[TEST3]
Testovanie parseru na subore: "tests/test_files_parser/parser_nondet3.test"
~~~~~~~~~~~~~~~~~~~~
zaciatok suboru
-------------------------------------------------------
package main

func jozko()(int){
    return 10
}



func main (){
    id := 0
    id1 := 0
    id2 := 0
    id3 := 0
    id, id2, id3 = 1+3,1,1
    id1 = jozko()
}

-------------------------------------------------------
koniec suboru
EXIT CODE JE : --------------------------------------------------------------------0

[TEST4]
Testovanie parseru na subore: "tests/test_files_parser/parser_nondet4.test"
~~~~~~~~~~~~~~~~~~~~
zaciatok suboru
-------------------------------------------------------
package main


func jozko()(int){
    return 5
}


func main (){
    id := 0
    id1 := 0
    id2 := 0
    id3 := 0
    id, id2, id3 = 1+3, 45, 99
    id1 = jozko()
}

-------------------------------------------------------
koniec suboru
EXIT CODE JE : --------------------------------------------------------------------0

[TEST5]
Testovanie parseru na subore: "tests/test_files_parser/parser_nondet5.test"
~~~~~~~~~~~~~~~~~~~~
zaciatok suboru
-------------------------------------------------------
package main

func jozko(a int,b int,c int)(int){
    return a+b+c
}



func main (){
    id := 0
    id1 := 0
    id2 := 0
    id3 := 0
    id, id2, id3 = 1+3, 45, 99
    id1 = jozko(1, 3, 4)
}

-------------------------------------------------------
koniec suboru
EXIT CODE JE : --------------------------------------------------------------------0

[TEST6]
Testovanie parseru na subore: "tests/test_files_parser/parser_nondet6.test"
~~~~~~~~~~~~~~~~~~~~
zaciatok suboru
-------------------------------------------------------
package main


func jozko()(int,int,int){
    return 10,1,0
}



func main (){
    id := 0
    id1 := 0
    id2 := 0
    id3 := 0
    id5 := 0
    kokotina := 0
    id, id2, id3 = 1+3, 45, 99
    id1, id5, kokotina = jozko()
}

-------------------------------------------------------
koniec suboru
EXIT CODE JE : --------------------------------------------------------------------0

[TEST7]
Testovanie parseru na subore: "tests/test_files_parser/parser_nondet7.test"
~~~~~~~~~~~~~~~~~~~~
zaciatok suboru
-------------------------------------------------------
package main


func jozko(a int , b int )(int,int){
    return a+b,a
}

func main (){
    id := 0
    id1 := 0
    id2 := 0
    id3 := 0
    jebem := 0
    kokot := 0 
    po := 0   
    id1, jebem = jozko(po, kokot)
    id, id2, id3 = 1+3, 45, 99

}

-------------------------------------------------------
koniec suboru
EXIT CODE JE : --------------------------------------------------------------------0

[TEST8]
Testovanie parseru na subore: "tests/test_files_parser/parser_nondet8.test"
~~~~~~~~~~~~~~~~~~~~
zaciatok suboru
-------------------------------------------------------
package main


func jozko(a int , b int )(int,int){
    return a+b,a
}


func main (){
    id := 0
    id1 := 0
    id2 := 0
    id3 := 0
    id5 := 0
    jebem := 0
    po := 0
    kokot := 0
    chod_dpc := 0
    id1, jebem = jozko(po, kokot)
    id, id2, id3 = 1+3, 45, chod_dpc

}

-------------------------------------------------------
koniec suboru
EXIT CODE JE : --------------------------------------------------------------------0

[TEST9]
Testovanie parseru na subore: "tests/test_files_parser/parser_package_main.test"
~~~~~~~~~~~~~~~~~~~~
zaciatok suboru
-------------------------------------------------------
//jebem komenty
package main

func mak () {
	for a:=0;a==0;a=a+2 {
	}
}

func main() {

}
-------------------------------------------------------
koniec suboru
EXIT CODE JE : --------------------------------------------------------------------0

[TEST10]
Testovanie parseru na subore: "tests/test_files_parser/parser_func_main.test"
~~~~~~~~~~~~~~~~~~~~
zaciatok suboru
-------------------------------------------------------
package main
func main () {

}

func ak () {
    
}
-------------------------------------------------------
koniec suboru
EXIT CODE JE : --------------------------------------------------------------------0

[TEST11]
Testovanie parseru na subore: "tests/test_files_parser/parser_func_for.test"
~~~~~~~~~~~~~~~~~~~~
zaciatok suboru
-------------------------------------------------------
package main
func mak () {
    as := 0
    for a := 3+1 ;a<5; {


            for  ;as<5; {

            }

    }
    sa := 0
    for  ;sa<5; {

    }
}


func main (){

}
-------------------------------------------------------
koniec suboru
EXIT CODE JE : --------------------------------------------------------------------0

[TEST12]
Testovanie parseru na subore: "tests/test_files_parser/parser_func_if.test"
~~~~~~~~~~~~~~~~~~~~
zaciatok suboru
-------------------------------------------------------
package main
func mak ()(int) {
    a := 0
    if 0==0 {
        if 0==0 {
            return 2
        } else{

        }

    } else{


    }

    if 1==0 {

    } else{

    }
    return 2
}

func main(){

}

-------------------------------------------------------
koniec suboru
EXIT CODE JE : --------------------------------------------------------------------0

[TEST13]
Testovanie parseru na subore: "tests/test_files_parser/parser_func_return_type.test"
~~~~~~~~~~~~~~~~~~~~
zaciatok suboru
-------------------------------------------------------
package main
func mak () (float64) {
    return 1.1
}

func brasko () (int,string) {
    return 2,"kapo"
}

func main(){

}

-------------------------------------------------------
koniec suboru
EXIT CODE JE : --------------------------------------------------------------------0

[TEST14]
Testovanie parseru na subore: "tests/test_files_parser/parser_func_call_of_func.test"
~~~~~~~~~~~~~~~~~~~~
zaciatok suboru
-------------------------------------------------------
package main

func ferovi (abc int) {
    return
}
func kuruje (a int, b int,c int,d int) {
    return
}
func na (skap int) {
    return
}
func hlavu () {
    return
}

func mak () {
    ferovi(3)

    kuruje(4,7,4,3)

    na(idcko)

    hlavu()
    return
}

func main(){

}

-------------------------------------------------------
koniec suboru
EXIT CODE JE : --------------------------------------------------------------------3

[TEST15]
Testovanie parseru na subore: "tests/test_files_parser/parser_func_:=.test"
~~~~~~~~~~~~~~~~~~~~
zaciatok suboru
-------------------------------------------------------
package main
func mak (sa int) {
    skap := 3 + 1
    sa = 5

}

func main(){

}
-------------------------------------------------------
koniec suboru
EXIT CODE JE : --------------------------------------------------------------------0

[TEST16]
Testovanie parseru na subore: "tests/test_files_parser/parser_func_ids.test"
~~~~~~~~~~~~~~~~~~~~
zaciatok suboru
-------------------------------------------------------
package main

func resttjeslabykkt (a int, b int)(int,int,int){
    return a,b,a+b 
}


func kobylamamalybok () {
    kapn := 0
    kap := 0
    coconut := 0
    gadze := 0
    neminaju := 0

    kapn ,kap , coconut = resttjeslabykkt (50,7)


} 
func main(){

}

------------------------------